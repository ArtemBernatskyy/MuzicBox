defaults: &DEFAULT
  working_directory: /home/circleci/reactmusic
  docker:
    - image: circleci/python:3.6
      environment:
        DEBUG: False
        STATIC_ROOT: ~/reactmusic/static
        ALLOWED_HOSTS: muzicbox.net
        DATABASE_URL: psql://root@localhost/reactmusic_test?sslmode=disable
        CACHE_URL: rediscache://127.0.0.1:6379/1?client_class=django_redis.client.DefaultClient
        MEDIA_ROOT: ~/reactmusic/media
        BROKER_URL: redis://localhost:6379/1
        CELERY_ACCEPT_CONTENT: json
        CELERY_TASK_SERIALIZER: json
        CELERY_RESULT_SERIALIZER: json
        CELERY_RESULT_BACKEND: redis://localhost:6379/0
        LAST_FM_KEY: 0f2856278668f93529ad7e611f55b7c3 # throwaway key which allows community builds
    - image: circleci/postgres:9.6.2
    - image: redis:3.2-alpine


version: 2
jobs:
  build:
    <<: *DEFAULT
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/circle.txt" }}
      - run:
          name: Installing requirements
          command: |
            python3 -m venv env
            source env/bin/activate
            pip install -r requirements/circle.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements/circle.txt" }}
          paths:
            - "env"
      - persist_to_workspace:
          # this is done to persist virtualenv across workflows 
          root: .
          paths:
            - env

  test:
    <<: *DEFAULT
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/reactmusic
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - run:
          name: Running tests
          command: |
            source env/bin/activate
            coverage run manage.py test
      - run:
          name: Generating code coverage
          command: |
            source env/bin/activate
            pip install codecov && codecov
      - run:
          name: Running code audition
          command: |
            source env/bin/activate
            pylama

  deploy:
    <<: *DEFAULT
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/reactmusic
      - run:
          name: Populate VAULT_PASS
          command: |
            echo $VAULT_PASS > .vault_pass.txt
      - run:
          name: Push to Server via Ansible
          command: |
            source env/bin/activate
            ansible-playbook -i deployment/inventories/production deployment/push.yml --tags="push" --vault-password-file .vault_pass.txt


workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
